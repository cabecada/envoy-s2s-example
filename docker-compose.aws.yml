version: '2'
services:

  # --------------------------------------------------
  # Front Proxy
  # --------------------------------------------------
  front-envoy:
    volumes:
      - /home/ubuntu/front-envoy.tmpl:/etc/envoy.tmpl


  # --------------------------------------------------
  # Service 1
  # --------------------------------------------------
  local-envoy1:
    volumes:
      - /home/ubuntu/service1-envoy.tmpl:/etc/envoy.tmpl
    ports:
      - "80:80"

  registrator1:
    environment:
      - ENVIRONMENT=AWS
      - DISCOVERY_URL=${DISCOVERY_URL}
      - PROXY_HOST_PORT=80
      - SERVICE_NAME=service1
      - REFRESH_INTERVAL=5


  # --------------------------------------------------
  # Service 2 (first node)
  # --------------------------------------------------
  local-envoy2:
    volumes:
      - /home/ubuntu/service2-envoy.tmpl:/etc/envoy.tmpl
    ports:
      - "80:80"

  registrator2:
    environment:
      - ENVIRONMENT=AWS
      - DISCOVERY_URL=${DISCOVERY_URL}
      - PROXY_HOST_PORT=80
      - SERVICE_NAME=service2
      - REFRESH_INTERVAL=5


  # --------------------------------------------------
  # Service 2 (second node)
  # --------------------------------------------------
  local-envoy2a:
    volumes:
      - /home/ubuntu/service2-envoy.tmpl:/etc/envoy.tmpl
    ports:
      - "80:80"

  registrator2a:
    environment:
      - ENVIRONMENT=AWS
      - DISCOVERY_URL=${DISCOVERY_URL}
      - PROXY_HOST_PORT=80
      - SERVICE_NAME=service2
      - REFRESH_INTERVAL=5


  # --------------------------------------------------
  # Jaeger
  # --------------------------------------------------
  registrator-jaeger:
    environment:
      - ENVIRONMENT=AWS
      - DISCOVERY_URL=${DISCOVERY_URL}
      - PROXY_NETWORK_ALIAS=jaeger
      - PROXY_HOST_PORT=9411
      - SERVICE_NAME=jaeger
      - REFRESH_INTERVAL=5


  # --------------------------------------------------
  # Lyft Service Discovery
  # --------------------------------------------------
  discovery:
    image: javajefe/lyft-discovery
    environment:
      - BACKEND_STORAGE=DynamoDB
      - DYNAMODB_CREATE_TABLES_IN_APP=true
      - DYNAMODB_TABLE_HOSTS=service_discovery
      - APPLICATION_ENV=production
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
