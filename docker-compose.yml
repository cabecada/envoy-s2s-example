version: '2'
services:

  # Front Proxy
  front-envoy:
    build:
      context: .
      dockerfile: Dockerfile-frontenvoy
    volumes:
      - ./front-envoy-jaeger.yaml:/etc/front-envoy.yaml
    expose:
      - "80"
      - "8001"
    ports:
      - "8000:80"
      - "8001:8001"
    networks:
      envoymesh: {}

  # Service group 1
  local-envoy1:
    build:
      context: .
      dockerfile: Dockerfile-localenvoy
    volumes:
      - ./service1-envoy-jaeger.yaml:/etc/service-envoy.yaml
    environment:
      - SERVICE_NAME=1
    expose:
      - "80"
    networks:
      envoymesh: {}
      servicepod1:
        aliases:
          - local-proxy

  service1:
    build:
      context: .
      dockerfile: Dockerfile-service
    environment:
      - SERVICE_NAME=1
    networks:
      servicepod1:
        aliases:
          - local-service


  # Service group 2
  local-envoy2:
    build:
      context: .
      dockerfile: Dockerfile-localenvoy
    volumes:
      - ./service2-envoy-jaeger.yaml:/etc/service-envoy.yaml
    environment:
      - SERVICE_NAME=2
    expose:
      - "80"
    networks:
      envoymesh: {}
      servicepod2:
        aliases:
          - local-proxy

  service2:
    build:
      context: .
      dockerfile: Dockerfile-service
    environment:
      - SERVICE_NAME=2
    networks:
      servicepod2:
        aliases:
          - local-service

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    expose:
      - "9411"
      - "16686"
    ports:
      - "9411:9411"
      - "16686:16686"
    networks:
      envoymesh: {}

  # Lyft Service Discovery
  discovery:
    image: javajefe/lyftdiscovery
    environment:
      - BACKEND_STORAGE=InMemory
    expose:
      - "8080"
    ports:
      - "8080:8080"
    networks:
      envoymesh: {}

  # Registrator for Service Discovery
  # Registers local-envoy1 and local-envoy2
  registrator:
    build:
      context: ./LyftDiscoveryRegistrator
      dockerfile: Dockerfile
    environment:
      - refresh_interval=5
    networks:
      envoymesh: {}


networks:
  envoymesh: {}
  servicepod1: {}
  servicepod2: {}
