version: '2'
services:

  # Front Proxy
  front-envoy:
    build:
      context: .
      dockerfile: Dockerfile-frontenvoy
    volumes:
      - ./front-envoy.yaml:/etc/front-envoy.yaml
    labels:
      - "SERVICE_IGNORE=true"
    expose:
      - "80"
      - "8001"
    ports:
      - "8000:80"
      - "8001:8001"
    networks:
      envoymesh: {}

  # Service group 1
  local-envoy1:
    build:
      context: .
      dockerfile: Dockerfile-localenvoy
    volumes:
      - ./service1-envoy.yaml:/etc/service-envoy.yaml
    environment:
      - SERVICE_NAME=1
    labels:
      - "SERVICE_80_NAME=service1"
      - "SERVICE_10000_IGNORE=true"
    expose:
      - "80"
    networks:
      envoymesh: {}
      servicepod1:
        aliases:
          - local-proxy

  service1:
    build:
      context: .
      dockerfile: Dockerfile-service
    environment:
      - SERVICE_NAME=1
    labels:
      - "SERVICE_IGNORE=true"
    networks:
      servicepod1:
        aliases:
          - local-service


  # Service group 2
  local-envoy2:
    build:
      context: .
      dockerfile: Dockerfile-localenvoy
    volumes:
      - ./service2-envoy.yaml:/etc/service-envoy.yaml
    environment:
      - SERVICE_NAME=2
    labels:
      - "SERVICE_80_NAME=service2"
      - "SERVICE_10000_IGNORE=true"
    expose:
      - "80"
    networks:
      envoymesh: {}
      servicepod2:
        aliases:
          - local-proxy

  service2:
    build:
      context: .
      dockerfile: Dockerfile-service
    environment:
      - SERVICE_NAME=2
    labels:
      - "SERVICE_IGNORE=true"
    networks:
      servicepod2:
        aliases:
          - local-service

  local-envoy2a:
    build:
      context: .
      dockerfile: Dockerfile-localenvoy
    volumes:
      - ./service2-envoy.yaml:/etc/service-envoy.yaml
    environment:
      - SERVICE_NAME=2a
    labels:
      - "SERVICE_80_NAME=service2a"
      - "SERVICE_10000_IGNORE=true"
    expose:
      - "80"
    networks:
      envoymesh: {}
      servicepod2a:
        aliases:
          - local-proxy

  service2a:
    build:
      context: .
      dockerfile: Dockerfile-service
    environment:
      - SERVICE_NAME=2a
    labels:
      - "SERVICE_IGNORE=true"
    networks:
      servicepod2a:
        aliases:
          - local-service

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    labels:
      - "SERVICE_IGNORE=true"
    expose:
      - "9411"
      - "16686"
    ports:
      - "9411:9411"
      - "16686:16686"
    networks:
      envoymesh: {}

  consul:
    image: consul:1.0.7
    restart: always
    labels:
      - "SERVICE_IGNORE=true"
    ports:
      - "8500:8500"
    networks:
      envoymesh: {}

  registrator:
    image: gliderlabs/registrator:v7
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    labels:
      - "SERVICE_IGNORE=true"
    command: -internal consul://consul:8500
    networks:
      envoymesh: {}

  consul-envoy-xds:
    image: javajefe/consul-envoy-xds
    environment:
      - LOG_LEVEL=DEBUG
      - CONSUL_CLIENT_HOST=consul
      - CONSUL_TOKEN=-
      - WATCHED_SERVICE=service2
    labels:
      - "SERVICE_IGNORE=true"
    networks:
      envoymesh:
        aliases:
          - xds

networks:
  envoymesh: {}
  servicepod1: {}
  servicepod2: {}
  servicepod2a: {}
